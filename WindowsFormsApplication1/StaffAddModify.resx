<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAADBQTFRFxsbG
        ////ycnJw8PD7+/v/Pz82trazc3N4ODg8vLy+Pj45ubm1dXV7Ozs4+PjwcHBdGW6rgAAA1VJREFUeF7t
        3A13myAYhmHnK+Jn8v//bUFJ07RpCy6KL72vbWenOzHxGR8iQioAAAAAAAAAAAAAAAAAAAAAAABgR3X4
        u1hyE34ui0g9td04N/Olm2xVWkgR2/Xm390wTyWFlKrtQ7IPzGhLySjtsCRacj2Yi8go9kn53ZjL+hq1
        fawrIemelN0HvfpinEOSb5lJc0Spfqih71qtEX3bigmoN6JU0oQIv1Easb66NvhzN/POhmN0kTacfoQh
        HKNLHVl+i1FhPZVfrxMPpnCYIlM49UiDukKM7kdvtBWi2HDi0XplhZjYCj1tA9SUjnSlrDtN7Gc8XX2N
        jOG0U6i6SZTlrj5RGw7WIb0ZKmuIdkvCRlPCDR2Nsq4m4bbizihKmHLjdEfCM/kDCYvvadLvLDxVV4vy
        r/jbRm2qEhY/8t4yqNHUlToSTjvBRVnC9GqqbRbDxk7o32ibiSp/NjF5WNOH4xRJndXXVkmdpPv8WWHA
        pBsMo3P5UHw9NQqfPDmuVOIe4+t9yu3+xA3AO50BVzERVQeMWTGkdjmN5ytqF5I8YdyvwS/D0F2Ilf2p
        po7hRbpJ5zJ+vvwvPzelrDCVal1heufzmTJWlwYi9vJwcTRNW0thS/dFatuOszOOBa5kD0Tc71I3I/wV
        ZTU8AADwVBiulTlqCyPSd+Gf9fqQYMljJ79BtjfeMPTz6LfKqk66DkBdgHrq5m+nTU0/trb2L1vpGrb6
        nc1dEzGbaPq5dfeLukpT5OrSRT2ZMeurhrGtr2pCSjXNUek+6TvXMv0bnLiyLk1qW7zVcAt5Vn7CKWYe
        /7n1P6b3U1QnJfJs2306M9rr8n7Lu57H10nR/+CnUs+2hT18rcDLnG06XKbX5nPMeKJqKr8/Q9vCTGfp
        V3cowGA+R7cql3A+OxjO0Bo37DRMkPs7JXwlSl2/lspHzHndkObLs8/XMpmXoly3rHZOZLJ+4cKmfRWp
        cn7hQtLXJmyXb5vCnteJB9nq6UFFaLIV4rb9W+lMtpaYvJR7u1yrM/cajn6VaXHfQc3Qy9QQ6/DxB8i0
        DPzAhLm2JoaPPwBluBMSvhAJd0LCFyLhTkj4QiTcyYEJc22Dro/jPix8KAAAAAAAAAAAAAAAAAAAAAAA
        APDHVdUb1CcjeL1yviEAAAAASUVORK5CYII=
</value>
  </data>
</root>