<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAwUExURcbGxv///8nJycPDw+/v7/z8/Nra2s3NzeDg4PLy8vj4+Obm5tXV1ezs7OPj48HBwXRl
        uq4AAANVSURBVHhe7dwNd5sgGIZh5yviZ/L//21BSdO0aQsuii+9r21npzsx8RkfIkIqAAAAAAAAAAAA
        AAAAAAAAAAAAYEd1+LtYchN+LotIPbXdODfzpZtsVVpIEdv15t/dME8lhZSq7UOyD8xoS8ko7bAkWnI9
        mIvIKPZJ+d2Yy/oatX2sKyHpnpTdB736YpxDkm+ZSXNEqX6ooe9arRF924oJqDeiVNKECL9RGrG+ujb4
        czfzzoZjdJE2nH6EIRyjSx1ZfotRYT2VX68TD6ZwmCJTOPVIg7pCjO5Hb7QVothw4tF6ZYWY2Ao9bQPU
        lI50paw7TexnPF19jYzhtFOoukmU5a4+URsO1iG9GSpriHZLwkZTwg0djbKuJuG24s4oSphy43RHwjP5
        AwmL72nS7yw8VVeL8q/420ZtqhIWP/LeMqjR1JU6Ek47wUVZwvRqqm0Ww8ZO6N9om4kqfzYxeVjTh+MU
        SZ3V11ZJnaT7/FlhwKQbDKNz+VB8PTUKnzw5rlTiHuPrfcrt/sQNwDudAVcxEVUHjFkxpHY5jecraheS
        PGHcr8Evw9BdiJX9qaaO4UW6Secyfr78Lz83pawwlWpdYXrn85kyVpcGIvbycHE0TVtLYUv3RWrbjrMz
        jgWuZA9E3O9SNyP8FWU1PAAA8FQYrpU5agsj0nfhn/X6kGDJYye/QbY33jD08+i3yqpOug5AXYB66uZv
        p01NP7a29i9b6Rq2+p3NXRMxm2j6uXX3i7pKU+Tq0kU9mTHrq4axra9qQko1zVHpPuk71zL9G5y4si5N
        alu81XALeVZ+wilmHv+59T+m91NUJyXybNt9OjPa6/J+y7uex9dJ0f/gp1LPtoU9fK3Ay5xtOlym1+Zz
        zHiiaiq/P0Pbwkxn6Vd3KMBgPke3KpdwPjsYztAaN+w0TJD7OyV8JUpdv5bKR8x53ZDmy7PP1zKZl6Jc
        t6x2TmSyfuHCpn0VqXJ+4ULS1yZsl2+bwp7XiQfZ6ulBRWiyFeK2/VvpTLaWmLyUe7tcqzP3Go5+lWlx
        30HN0MvUEOvw8QfItAz8wIS5tiaGjz8AZbgTEr4QCXdCwhci4U5I+EIk3MmBCXNtg66P4z4sfCgAAAAA
        AAAAAAAAAAAAAAAAAADwx1XVG9QnI3i9cr4hAAAAAElFTkSuQmCC
</value>
  </data>
</root>